generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Account {
  id              Int          @default(autoincrement())    @id
  email           String       @unique
  username        String       @unique
  displayName     String
  password        String

  createdAt       DateTime     @default(now())

  refreshToken    String?      @unique
  ipsSeen         IpSeen[]
  permissionLevel Int          @default(1)

  posts           Post[]
  comments        Comments[]
}


enum States {
  DELETED
  PRIVATE
  UNLISTED
  PUBLIC
}


model Post {
  id         Int       @default(autoincrement()) @id
  title      String?
  imageUrl   String
  state      States    @default(PUBLIC)

  createdAt  DateTime     @default(now())

  sender     Account   @relation(fields: [senderId], references: [id])
  senderId   Int
  keywords   String[]

  tags       String[]

  comments   Comments[]
}


model Comments{
  id         Int       @default(autoincrement()) @id
  body       String

  createdAt  DateTime  @default(now())

  sender     Account   @relation(fields: [senderId], references: [id])
  senderId   Int

  onPost     Post      @relation(fields: [postId], references: [id])
  postId     Int

  commentHistory CommentHistory[]
}

model CommentHistory {
  id          Int           @default(autoincrement()) @id
  body        String
  modifiedAt  DateTime      @default(now())

  comments    Comments      @relation(fields: [commentsId], references: [id])
  commentsId  Int
}

model IpSeen {
  id          Int      @default(autoincrement()) @id
  ip          String
  account     Account  @relation(fields: [accountId], references: [id])
  accountId   Int
  @@unique([ip, accountId])
}
